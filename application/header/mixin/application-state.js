'use strict';

var _builtInStore = require('focus-core/application/built-in-store');

var _builtInStore2 = _interopRequireDefault(_builtInStore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var applicationStateMixin = {
    /** @inheriteddoc */
    getInitialState: function getCartridgeInitialState() {
        return this._getStateFromStore();
    },
    /** @inheriteddoc */
    componentWillMount: function cartridgeWillMount() {
        _builtInStore2.default.addModeChangeListener(this._handleChangeApplicationStatus);
        _builtInStore2.default.addRouteChangeListener(this._handleChangeApplicationStatus);
    },
    /** @inheriteddoc */
    appStateWillUnMount: function cartridgeWillUnMount() {
        _builtInStore2.default.removeModeChangeListener(this._handleChangeApplicationStatus);
        _builtInStore2.default.removeRouteChangeListener(this._handleChangeApplicationStatus);
    },
    _handleChangeApplicationStatus: function _handleChangeApplicationStatus() {
        this.setState(this._getStateFromStore());
    },

    _getStateFromStore: function getCartridgeStateFromStore() {
        var processMode = _builtInStore2.default.getMode();
        var mode = 'consult';
        if (processMode && processMode.edit && processMode.edit > 0) {
            mode = 'edit';
        }
        return { mode: mode, route: _builtInStore2.default.getRoute() };
    }
};

module.exports = applicationStateMixin;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzLXJlYWN0LWNsYXNzLWNvbXBvbmVudC5qcyJdLCJuYW1lcyI6WyJhcHBsaWNhdGlvblN0YXRlTWl4aW4iLCJnZXRJbml0aWFsU3RhdGUiLCJnZXRDYXJ0cmlkZ2VJbml0aWFsU3RhdGUiLCJfZ2V0U3RhdGVGcm9tU3RvcmUiLCJjb21wb25lbnRXaWxsTW91bnQiLCJjYXJ0cmlkZ2VXaWxsTW91bnQiLCJhZGRNb2RlQ2hhbmdlTGlzdGVuZXIiLCJfaGFuZGxlQ2hhbmdlQXBwbGljYXRpb25TdGF0dXMiLCJhZGRSb3V0ZUNoYW5nZUxpc3RlbmVyIiwiYXBwU3RhdGVXaWxsVW5Nb3VudCIsImNhcnRyaWRnZVdpbGxVbk1vdW50IiwicmVtb3ZlTW9kZUNoYW5nZUxpc3RlbmVyIiwicmVtb3ZlUm91dGVDaGFuZ2VMaXN0ZW5lciIsInNldFN0YXRlIiwiZ2V0Q2FydHJpZGdlU3RhdGVGcm9tU3RvcmUiLCJwcm9jZXNzTW9kZSIsImdldE1vZGUiLCJtb2RlIiwiZWRpdCIsInJvdXRlIiwiZ2V0Um91dGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7QUFDQSxJQUFJQSx3QkFBd0I7QUFDMUI7QUFDRUMscUJBQWlCLFNBQVNDLHdCQUFULEdBQW9DO0FBQ2pELGVBQU8sS0FBS0Msa0JBQUwsRUFBUDtBQUNILEtBSnVCO0FBSzFCO0FBQ0VDLHdCQUFvQixTQUFTQyxrQkFBVCxHQUE4QjtBQUM5QywrQkFBaUJDLHFCQUFqQixDQUF1QyxLQUFLQyw4QkFBNUM7QUFDQSwrQkFBaUJDLHNCQUFqQixDQUF3QyxLQUFLRCw4QkFBN0M7QUFDSCxLQVR1QjtBQVUxQjtBQUNFRSx5QkFBcUIsU0FBU0Msb0JBQVQsR0FBZ0M7QUFDakQsK0JBQWlCQyx3QkFBakIsQ0FBMEMsS0FBS0osOEJBQS9DO0FBQ0EsK0JBQWlCSyx5QkFBakIsQ0FBMkMsS0FBS0wsOEJBQWhEO0FBQ0gsS0FkdUI7QUFleEJBLGtDQWZ3Qiw0Q0FlUztBQUM3QixhQUFLTSxRQUFMLENBQWMsS0FBS1Ysa0JBQUwsRUFBZDtBQUNILEtBakJ1Qjs7QUFrQnhCQSx3QkFBb0IsU0FBU1csMEJBQVQsR0FBc0M7QUFDdEQsWUFBSUMsY0FBYyx1QkFBaUJDLE9BQWpCLEVBQWxCO0FBQ0EsWUFBSUMsT0FBTyxTQUFYO0FBQ0EsWUFBR0YsZUFBZUEsWUFBWUcsSUFBM0IsSUFBbUNILFlBQVlHLElBQVosR0FBbUIsQ0FBekQsRUFBNEQ7QUFDeERELG1CQUFPLE1BQVA7QUFDSDtBQUNELGVBQU8sRUFBQ0EsTUFBTUEsSUFBUCxFQUFhRSxPQUFPLHVCQUFpQkMsUUFBakIsRUFBcEIsRUFBUDtBQUNIO0FBekJ1QixDQUE1Qjs7QUE0QkFDLE9BQU9DLE9BQVAsR0FBaUJ0QixxQkFBakIiLCJmaWxlIjoiaXMtcmVhY3QtY2xhc3MtY29tcG9uZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFwcGxpY2F0aW9uU3RvcmUgZnJvbSAnZm9jdXMtY29yZS9hcHBsaWNhdGlvbi9idWlsdC1pbi1zdG9yZSc7XHJcbnZhciBhcHBsaWNhdGlvblN0YXRlTWl4aW4gPSB7XHJcbiAgLyoqIEBpbmhlcml0ZWRkb2MgKi9cclxuICAgIGdldEluaXRpYWxTdGF0ZTogZnVuY3Rpb24gZ2V0Q2FydHJpZGdlSW5pdGlhbFN0YXRlKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9nZXRTdGF0ZUZyb21TdG9yZSgpO1xyXG4gICAgfSxcclxuICAvKiogQGluaGVyaXRlZGRvYyAqL1xyXG4gICAgY29tcG9uZW50V2lsbE1vdW50OiBmdW5jdGlvbiBjYXJ0cmlkZ2VXaWxsTW91bnQoKSB7XHJcbiAgICAgICAgYXBwbGljYXRpb25TdG9yZS5hZGRNb2RlQ2hhbmdlTGlzdGVuZXIodGhpcy5faGFuZGxlQ2hhbmdlQXBwbGljYXRpb25TdGF0dXMpO1xyXG4gICAgICAgIGFwcGxpY2F0aW9uU3RvcmUuYWRkUm91dGVDaGFuZ2VMaXN0ZW5lcih0aGlzLl9oYW5kbGVDaGFuZ2VBcHBsaWNhdGlvblN0YXR1cyk7XHJcbiAgICB9LFxyXG4gIC8qKiBAaW5oZXJpdGVkZG9jICovXHJcbiAgICBhcHBTdGF0ZVdpbGxVbk1vdW50OiBmdW5jdGlvbiBjYXJ0cmlkZ2VXaWxsVW5Nb3VudCgpIHtcclxuICAgICAgICBhcHBsaWNhdGlvblN0b3JlLnJlbW92ZU1vZGVDaGFuZ2VMaXN0ZW5lcih0aGlzLl9oYW5kbGVDaGFuZ2VBcHBsaWNhdGlvblN0YXR1cyk7XHJcbiAgICAgICAgYXBwbGljYXRpb25TdG9yZS5yZW1vdmVSb3V0ZUNoYW5nZUxpc3RlbmVyKHRoaXMuX2hhbmRsZUNoYW5nZUFwcGxpY2F0aW9uU3RhdHVzKTtcclxuICAgIH0sXHJcbiAgICBfaGFuZGxlQ2hhbmdlQXBwbGljYXRpb25TdGF0dXMoKSB7XHJcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh0aGlzLl9nZXRTdGF0ZUZyb21TdG9yZSgpKTtcclxuICAgIH0sXHJcbiAgICBfZ2V0U3RhdGVGcm9tU3RvcmU6IGZ1bmN0aW9uIGdldENhcnRyaWRnZVN0YXRlRnJvbVN0b3JlKCkge1xyXG4gICAgICAgIHZhciBwcm9jZXNzTW9kZSA9IGFwcGxpY2F0aW9uU3RvcmUuZ2V0TW9kZSgpO1xyXG4gICAgICAgIHZhciBtb2RlID0gJ2NvbnN1bHQnO1xyXG4gICAgICAgIGlmKHByb2Nlc3NNb2RlICYmIHByb2Nlc3NNb2RlLmVkaXQgJiYgcHJvY2Vzc01vZGUuZWRpdCA+IDApIHtcclxuICAgICAgICAgICAgbW9kZSA9ICdlZGl0JztcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHttb2RlOiBtb2RlLCByb3V0ZTogYXBwbGljYXRpb25TdG9yZS5nZXRSb3V0ZSgpfTtcclxuICAgIH1cclxufTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gYXBwbGljYXRpb25TdGF0ZU1peGluO1xyXG4iXX0=