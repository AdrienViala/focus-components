const configBuilder = require('webpack-focus').configBuilder;
const path = require('path');

const customConfig = {
    externals: {
        'focus-core': 'FocusCore',
        'focus-core/application': ['FocusCore', 'application'],
        'focus-core/application/built-in-store': ['FocusCore', 'application', 'builtInStore'],
        'focus-core/component': ['FocusCore', 'component'],
        'focus-core/component/builder': ['FocusCore', 'component', 'builder'],
        'focus-core/component/types': ['FocusCore', 'component', 'types'],
        'focus-core/definition': ['FocusCore', 'definition'],
        'focus-core/definition/domain': ['FocusCore', 'definition', 'domain'],
        'focus-core/definition/domain/container': ['FocusCore', 'definition', 'domain', 'container'],
        'focus-core/definition/entity': ['FocusCore', 'definition', 'entity'],
        'focus-core/definition/entity/builder': ['FocusCore', 'definition', 'entity', 'builder'],
        'focus-core/definition/entity/container': ['FocusCore', 'definition', 'entity', 'container'],
        'focus-core/definition/formatter': ['FocusCore', 'definition', 'formatter'],
        'focus-core/definition/formatter/number': ['FocusCore', 'definition', 'formatter', 'number'],
        'focus-core/definition/validator': ['FocusCore', 'definition', 'validator'],
        'focus-core/definition/validator/validate': ['FocusCore', 'definition', 'validator', 'validate'],
        'focus-core/definition/validator/date': ['FocusCore', 'definition', 'validator', 'date'],
        'focus-core/definition/validator/email': ['FocusCore', 'definition', 'validator', 'email'],
        'focus-core/definition/validator/number': ['FocusCore', 'definition', 'validator', 'number'],
        'focus-core/definition/validator/string-length': ['FocusCore', 'definition', 'validator', 'stringLength'],
        'focus-core/dispatcher': ['FocusCore', 'dispatcher'],
        'focus-core/exception': ['FocusCore', 'exception'],
        'focus-core/exception/argument-invalid-exception': ['FocusCore', 'exception', 'ArgumentInvalidException'],
        'focus-core/exception/argument-null-exception': ['FocusCore', 'exception', 'ArgumentNullException'],
        'focus-core/exception/custom-exception': ['FocusCore', 'exception', 'CustomException'],
        'focus-core/exception/dependency-exception': ['FocusCore', 'exception', 'DependencyException'],
        'focus-core/exception/focus-exception': ['FocusCore', 'exception', 'FocusException'],
        'focus-core/exception/not-implemented-exception': ['FocusCore', 'exception', 'NotImplementedException'],
        'focus-core/history': ['FocusCore', 'history'],
        'focus-core/list': ['FocusCore', 'list'],
        'focus-core/list/action-builder': ['FocusCore', 'list', 'actionBuilder'],
        'focus-core/list/load-action': ['FocusCore', 'list', 'loadAction'],
        'focus-core/message': ['FocusCore', 'message'],
        'focus-core/message/built-in-store': ['FocusCore', 'message', 'builtInStore'],
        'focus-core/network': ['FocusCore', 'network'],
        'focus-core/network/cors': ['FocusCore', 'network', 'cors'],
        'focus-core/network/fetch': ['FocusCore', 'network', 'fetch'],
        'focus-core/network/cancellable-promise-builder': ['FocusCore', 'network', 'cancellablePromiseBuilder'],
        'focus-core/network/built-in-store': ['FocusCore', 'network', 'builtInStore'],
        'focus-core/network/config': ['FocusCore', 'network', 'config'],
        'focus-core/network/error-parsing': ['FocusCore', 'network', 'errorParsing'],
        'focus-core/reference': ['FocusCore', 'reference'],
        'focus-core/reference/built-in-store': ['FocusCore', 'reference', 'builtInStore'],
        'focus-core/reference/built-in-action': ['FocusCore', 'reference', 'builtInAction'],
        'focus-core/reference/config': ['FocusCore', 'reference', 'config'],
        'focus-core/reference/builder': ['FocusCore', 'reference', 'builder'],
        'focus-core/router': ['FocusCore', 'router'],
        'focus-core/search': ['FocusCore', 'search'],
        'focus-core/search/built-in-store': ['FocusCore', 'search', 'builtInStore'],
        'focus-core/search/action-builder': ['FocusCore', 'search', 'actionBuilder'],
        'focus-core/store': ['FocusCore', 'store'],
        'focus-core/store/application': ['FocusCore', 'store', 'application'],
        'focus-core/store/application/store': ['FocusCore', 'store', 'application', 'store'],
        'focus-core/store/list': ['FocusCore', 'store', 'list'],
        'focus-core/store/message': ['FocusCore', 'store', 'message'],
        'focus-core/store/message/store': ['FocusCore', 'store', 'message'],
        'focus-core/store/reference': ['FocusCore', 'store', 'reference'],
        'focus-core/store/request': ['FocusCore', 'store', 'request'],
        'focus-core/store/request/store': ['FocusCore', 'store', 'request'],
        'focus-core/store/search': ['FocusCore', 'store', 'search'],
        'focus-core/store/search/advanced-search': ['FocusCore', 'store', 'search', 'advancedSearch'],
        'focus-core/store/search/quick-search': ['FocusCore', 'store', 'search', 'quickSearch'],
        'focus-core/store/user': ['FocusCore', 'store', 'user'],
        'focus-core/translation': ['FocusCore', 'translation'],
        'focus-core/user': ['FocusCore', 'user'],
        'focus-core/user/login': ['FocusCore', 'user'],
        'focus-core/user/profile': ['FocusCore', 'user'],
        'focus-core/util': ['FocusCore', 'util'],
        'focus-core/util/object': ['FocusCore', 'util', 'object'],
        'focus-core/util/string': ['FocusCore', 'util', 'string'],
        'focus-core/util/string/check': ['FocusCore', 'util', 'string', 'check'],
        'focus-core/util/url': ['FocusCore', 'util', 'url'],

        react: 'React',
        'react-dom': 'ReactDOM',
        moment: 'moment',
        jquery: 'jQuery',
        numeral: 'numeral'
    },
    module: {
        preLoaders: [
            {
                test: /material-design-lite\/material/,
                loader: 'exports?componentHandler'
            }
        ]
    }
};
module.exports = configBuilder(customConfig);
